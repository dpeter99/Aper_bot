// <auto-generated />
using System;
using Aper_bot.Database;
using Aper_bot.Hosting.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aper_bot.Database.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210206222956_AddSchemas")]
    partial class AddSchemas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Aper_bot.Database.Model.Guild", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("GuildID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("RulesChannelId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RulesMessageId")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Guild", "Aper_Bot");
                });

            modelBuilder.Entity("Aper_bot.Database.Model.GuildPermissionLevel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("GuildID")
                        .HasColumnType("int");

                    b.Property<int>("PermissionLevel")
                        .HasColumnType("int");

                    b.Property<string>("RoleID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("GuildID");

                    b.ToTable("GuildPermissionLevels", "Aper_Bot");
                });

            modelBuilder.Entity("Aper_bot.Database.Model.GuildRule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("GuildID")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GuildID");

                    b.ToTable("GuildRules", "Aper_Bot");
                });

            modelBuilder.Entity("Aper_bot.Database.Model.Image", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("ID");

                    b.ToTable("Images", "Aper_Bot");
                });

            modelBuilder.Entity("Aper_bot.Database.Model.Quote", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GuildID")
                        .HasColumnType("int");

                    b.Property<int?>("ImageID")
                        .HasColumnType("int");

                    b.Property<int?>("SourceID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CreatorID");

                    b.HasIndex("GuildID");

                    b.HasIndex("ImageID");

                    b.HasIndex("SourceID");

                    b.ToTable("Quotes", "Aper_Bot");
                });

            modelBuilder.Entity("Aper_bot.Database.Model.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Users", "Aper_Bot");
                });

            modelBuilder.Entity("Aper_bot.Database.Model.GuildPermissionLevel", b =>
                {
                    b.HasOne("Aper_bot.Database.Model.Guild", null)
                        .WithMany("PermissionLevels")
                        .HasForeignKey("GuildID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Aper_bot.Database.Model.GuildRule", b =>
                {
                    b.HasOne("Aper_bot.Database.Model.Guild", null)
                        .WithMany("Rules")
                        .HasForeignKey("GuildID");
                });

            modelBuilder.Entity("Aper_bot.Database.Model.Quote", b =>
                {
                    b.HasOne("Aper_bot.Database.Model.User", "Creator")
                        .WithMany("quotesMade")
                        .HasForeignKey("CreatorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aper_bot.Database.Model.Guild", "Guild")
                        .WithMany("Quotes")
                        .HasForeignKey("GuildID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aper_bot.Database.Model.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageID");

                    b.HasOne("Aper_bot.Database.Model.User", "Source")
                        .WithMany("quotes")
                        .HasForeignKey("SourceID");

                    b.Navigation("Creator");

                    b.Navigation("Guild");

                    b.Navigation("Image");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("Aper_bot.Database.Model.Guild", b =>
                {
                    b.Navigation("PermissionLevels");

                    b.Navigation("Quotes");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("Aper_bot.Database.Model.User", b =>
                {
                    b.Navigation("quotes");

                    b.Navigation("quotesMade");
                });
#pragma warning restore 612, 618
        }
    }
}
